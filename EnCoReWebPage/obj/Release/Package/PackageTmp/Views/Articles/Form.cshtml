@model EnCoReWebPage.App_Classes.ArticlesVM

<div class="modal-dialog modal-lg">
    <div class="modal-content">
        <div class="modal-header">
            <h4 class="modal-title">Ajouter un article</h4>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>

        @using (Ajax.BeginForm("Save", "Articles", new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnSuccess" }, new { enctype = "multipart/form-data" }))
        {
            @Html.HiddenFor(model => model.Id)

            <div class="modal-body">
                <b id="error" style="color:red; display:none"></b>

                <div class="form-group">

                    <label>Photo (Taille recommandée 370x240)</label>
                    @if (Model == null)
                    {
                        <output id="images"></output><br />
                        <input type="file" name="file" id="file" required />
                    }
                    else
                    {
                        <output id="imagesn"><img src="@Url.Content(Model.Image)" width="150" /></output><br />
                        <input type="file" name="file" id="filen" />
                    }

                    @Html.ValidationMessage("Photo", "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.Label("Catégorie")
                    @Html.DropDownList("CategorieId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessage("CategorieId", "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.Label("Titre")
                    @Html.TextBoxFor(model => model.Titre, new { @class = "form-control", placeholder = "Titre" })
                    @Html.ValidationMessageFor(model => model.Titre, "", new { @class = "text-danger" })
                </div>



                <div class="form-group">
                    @*<textarea id="Libelle" name="Libelle" class="textarea" placeholder="Place some text here" style="width: 100%; height: 200px; font-size: 14px; line-height: 18px; border: 1px solid #dddddd; padding: 10px;"></textarea>*@
                    @Html.TextAreaFor(model => model.Libelle, new { @class = "textarea", placeholder = "Votre texte ici ...", rows = "5", Style = "width: 100%; height: 200px; font-size: 14px; line-height: 18px; border: 1px solid #dddddd; padding: 10px;" })

                    @Html.ValidationMessageFor(model => model.Libelle, "", new { @class = "text-danger" })
                </div>




            </div>

            <div class="modal-footer justify-content-between">
                <button type="button" class="btn btn-default" data-dismiss="modal">Fermer</button>
                <button type="submit" class="btn btn-primary">Enregistrer</button>
            </div>
        }

    </div>
    <!-- /.modal-content -->
</div>
<!-- /.modal-dialog -->

<script type="text/javascript">

    (function () {

        tinyMCE.init({

            // General options
            mode: "exact",
            elements: "Libelle",
            theme: "advanced",
            height: "500",
            //width: "750",
            verify_html: false,
            plugins: "pagebreak,style,layer,table,save,advhr,advimage,advlink,emotions,iespell,inlinepopups,insertdatetime,preview,media,searchreplace,print,contextmenu,paste,directionality,fullscreen,noneditable,visualchars,nonbreaking,xhtmlxtras,template,wordcount,advlist,autosave",

            // Theme options
            theme_advanced_buttons1: "save,newdocument,|,bold,italic,underline,strikethrough,|,justifyleft,justifycenter,justifyright,justifyfull,styleselect,formatselect,fontselect,fontsizeselect",
            theme_advanced_buttons2: "cut,copy,paste,pastetext,pasteword,|,search,replace,|,bullist,numlist,|,outdent,indent,blockquote,|,undo,redo,|,link,unlink,anchor,image,cleanup,help,code,|,insertdate,inserttime,preview,|,forecolor,backcolor",
            theme_advanced_buttons3: "tablecontrols,|,hr,removeformat,visualaid,|,sub,sup,|,charmap,emotions,iespell,media,advhr,|,print,|,ltr,rtl,|,fullscreen",
            theme_advanced_buttons4: "insertlayer,moveforward,movebackward,absolute,|,styleprops,|,cite,abbr,acronym,del,ins,attribs,|,visualchars,nonbreaking,template,pagebreak,restoredraft,codehighlighting,netadvimage",
            theme_advanced_toolbar_location: "top",
            theme_advanced_toolbar_align: "left",
            theme_advanced_statusbar_location: "bottom",
            theme_advanced_resizing: false,

            // Example content CSS (should be your site CSS)
            //content_css : "css/content.css",
            content_css: "/Scripts/tinymce/css/content.css",
            convert_urls: false,

            // Drop lists for link/image/media/template dialogs
            template_external_list_url: "lists/template_list.js",
            external_link_list_url: "lists/link_list.js",
            external_image_list_url: "lists/image_list.js",
            media_external_list_url: "lists/media_list.js",

        });

    })();

</script>

@*<script>
    $(function () {
        // Summernote
        $('.textarea').summernote()
    })
</script>*@


<script type="text/javascript">
    function showimages(files) {
        {
            f = files[0];
            var reader = new FileReader();
            reader.onload = function (evt) {
                $('#images').replaceWith('<output id="images"></output><br />')
                var img = '<img src="' + evt.target.result + '"width="150px" />';
                $('#images').append(img);
            }
            reader.readAsDataURL(f);
        }
    }
    $('#file').change(function (evt) {
        showimages(evt.target.files);
    });

    function showimagesn(files) {
        {
            f = files[0];
            var reader = new FileReader();
            reader.onload = function (evt) {
                $('#imagesn').replaceWith('<output id="imagesn"></output><br />')
                var img = '<img src="' + evt.target.result + '"width="150px" />';
                $('#imagesn').append(img);
            }
            reader.readAsDataURL(f);
        }
    }
    $('#filen').change(function (evt) {
        showimagesn(evt.target.files);
    });
</script>